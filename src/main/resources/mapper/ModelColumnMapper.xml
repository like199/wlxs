<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.like.trip.mapper.ModelColumnMapper" >

    <resultMap id="BaseResultMap" type="com.like.trip.model.ModelColumn" >
        <id column="Id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="wx_type" property="wxType" jdbcType="VARCHAR" />
        <result column="contract_object" property="contractObject" jdbcType="VARCHAR" />
        <result column="contract_type" property="contractType" jdbcType="INTEGER" />
        <result column="contract_column" property="contractColumn" jdbcType="INTEGER" />
        <result column="label" property="label" jdbcType="VARCHAR" />
        <result column="model_id" property="modelId" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        Id, name, type, wx_type, contract_object, contract_type, contract_column, label, 
        model_id
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.like.trip.model.ModelColumnExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from model_column
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from model_column
        where Id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from model_column
        where Id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="com.like.trip.model.ModelColumnExample" >
        delete from model_column
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.like.trip.model.ModelColumn" >
        insert into model_column (Id, name, type, 
            wx_type, contract_object, contract_type, 
            contract_column, label, model_id
            )
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
            #{wxType,jdbcType=VARCHAR}, #{contractObject,jdbcType=VARCHAR}, #{contractType,jdbcType=INTEGER}, 
            #{contractColumn,jdbcType=INTEGER}, #{label,jdbcType=VARCHAR}, #{modelId,jdbcType=INTEGER}
            )
    </insert>

    <insert id="insertSelective" parameterType="com.like.trip.model.ModelColumn" >
        insert into model_column
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                Id,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="wxType != null" >
                wx_type,
            </if>
            <if test="contractObject != null" >
                contract_object,
            </if>
            <if test="contractType != null" >
                contract_type,
            </if>
            <if test="contractColumn != null" >
                contract_column,
            </if>
            <if test="label != null" >
                label,
            </if>
            <if test="modelId != null" >
                model_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="wxType != null" >
                #{wxType,jdbcType=VARCHAR},
            </if>
            <if test="contractObject != null" >
                #{contractObject,jdbcType=VARCHAR},
            </if>
            <if test="contractType != null" >
                #{contractType,jdbcType=INTEGER},
            </if>
            <if test="contractColumn != null" >
                #{contractColumn,jdbcType=INTEGER},
            </if>
            <if test="label != null" >
                #{label,jdbcType=VARCHAR},
            </if>
            <if test="modelId != null" >
                #{modelId,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.like.trip.model.ModelColumnExample" resultType="java.lang.Integer" >
        select count(*) from model_column
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update model_column
        <set >
            <if test="record.id != null" >
                Id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.wxType != null" >
                wx_type = #{record.wxType,jdbcType=VARCHAR},
            </if>
            <if test="record.contractObject != null" >
                contract_object = #{record.contractObject,jdbcType=VARCHAR},
            </if>
            <if test="record.contractType != null" >
                contract_type = #{record.contractType,jdbcType=INTEGER},
            </if>
            <if test="record.contractColumn != null" >
                contract_column = #{record.contractColumn,jdbcType=INTEGER},
            </if>
            <if test="record.label != null" >
                label = #{record.label,jdbcType=VARCHAR},
            </if>
            <if test="record.modelId != null" >
                model_id = #{record.modelId,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update model_column
        set Id = #{record.id,jdbcType=INTEGER},
            name = #{record.name,jdbcType=VARCHAR},
            type = #{record.type,jdbcType=VARCHAR},
            wx_type = #{record.wxType,jdbcType=VARCHAR},
            contract_object = #{record.contractObject,jdbcType=VARCHAR},
            contract_type = #{record.contractType,jdbcType=INTEGER},
            contract_column = #{record.contractColumn,jdbcType=INTEGER},
            label = #{record.label,jdbcType=VARCHAR},
            model_id = #{record.modelId,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.like.trip.model.ModelColumn" >
        update model_column
        <set >
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="wxType != null" >
                wx_type = #{wxType,jdbcType=VARCHAR},
            </if>
            <if test="contractObject != null" >
                contract_object = #{contractObject,jdbcType=VARCHAR},
            </if>
            <if test="contractType != null" >
                contract_type = #{contractType,jdbcType=INTEGER},
            </if>
            <if test="contractColumn != null" >
                contract_column = #{contractColumn,jdbcType=INTEGER},
            </if>
            <if test="label != null" >
                label = #{label,jdbcType=VARCHAR},
            </if>
            <if test="modelId != null" >
                model_id = #{modelId,jdbcType=INTEGER},
            </if>
        </set>
        where Id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.like.trip.model.ModelColumn" >
        update model_column
        set name = #{name,jdbcType=VARCHAR},
            type = #{type,jdbcType=VARCHAR},
            wx_type = #{wxType,jdbcType=VARCHAR},
            contract_object = #{contractObject,jdbcType=VARCHAR},
            contract_type = #{contractType,jdbcType=INTEGER},
            contract_column = #{contractColumn,jdbcType=INTEGER},
            label = #{label,jdbcType=VARCHAR},
            model_id = #{modelId,jdbcType=INTEGER}
        where Id = #{id,jdbcType=INTEGER}
    </update>
</mapper>